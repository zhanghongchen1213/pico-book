// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --------- //
// my_ws2812 //
// --------- //

#define my_ws2812_wrap_target 0
#define my_ws2812_wrap 13
#define my_ws2812_pio_version 0

static const uint16_t my_ws2812_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0x6068, //  1: out    null, 8                    
    0x6021, //  2: out    x, 1                       
    0xf401, //  3: set    pins, 1                [20]
    0xbb42, //  4: nop                           [27]
    0x0028, //  5: jmp    !x, 8                      
    0xb442, //  6: nop                           [20]
    0xbc42, //  7: nop                           [28]
    0xfa00, //  8: set    pins, 0                [26]
    0xb942, //  9: nop                           [25]
    0x004d, // 10: jmp    x--, 13                    
    0xb442, // 11: nop                           [20]
    0xbc42, // 12: nop                           [28]
    0x00e2, // 13: jmp    !osre, 2                   
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program my_ws2812_program = {
    .instructions = my_ws2812_program_instructions,
    .length = 14,
    .origin = -1,
    .pio_version = 0,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config my_ws2812_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + my_ws2812_wrap_target, offset + my_ws2812_wrap);
    return c;
}
#endif

